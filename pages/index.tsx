import type { NextPage } from 'next';
import Head from 'next/head';
import { useEffect, useState } from 'react';
import { createClient } from '@supabase/supabase-js';

type Message = {
  id: string;
  content: string;
  created_at: string;
};

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.NEXT_PUBLIC_SUPABASE_KEY!
);

const Home: NextPage = () => {
  const [messages, setMessages] = useState<Message[]>([]);

  useEffect(() => {
    const getInitialMessages = async () => {
      const { data, error } = await supabase
        .from<Message>('messages')
        .select()
        .order('created_at', { ascending: false });
      if (error) {
        alert(error.message);
      } else if (data) {
        setMessages(data);
      }
    };
    getInitialMessages();

    const subscription = supabase
      .from<Message>(`messages`)
      .on('INSERT', (payload) => {
        setMessages((current) => [payload.new, ...current]);
      })
      .subscribe();

    return () => {
      supabase.removeSubscription(subscription);
    };
  }, []);

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const form = e.currentTarget;
    const { message } = Object.fromEntries(new FormData(form));

    if (typeof message === 'string' && message.trim().length !== 0) {
      form.reset();
      const { error } = await supabase
        .from('messages')
        .insert({ content: message });

      if (error) {
        alert(error.message);
      }
    }
  };

  return (
    <div className="bg-black">
      <Head>
        <title>Simple Chat</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="p-4 flex flex-col min-h-screen">
        <ul className="flex flex-col items-start justify-start flex-grow">
          {messages.map((message) => (
            <li className="pb-2 flex" key={message.id}>
              <div className="bg-green-500 px-2 py-1 rounded">
                {message.content}
              </div>
              <span className="ml-2 text-zinc-500 text-sm">
                {message.created_at}
              </span>
            </li>
          ))}
        </ul>
        <form onSubmit={handleSubmit}>
          <input
            className="p-2 rounded w-full"
            type="text"
            name="message"
            placeholder="Type something..."
          />
        </form>
      </main>
    </div>
  );
};

export default Home;
